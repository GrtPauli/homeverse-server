# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Comment {
  content: String!
  date: Timestamp!
  nickname: String
}

input CommentInput {
  content: String!
  nickname: String
  recipeId: ID!
}

type Contact {
  createdAt: Float
  email: String
  id: ID
  name: String
  photo: String
  status: ContactRequestPosition
}

type ContactRequest {
  createdAt: Float
  email: String
  id: ID
  msg: String
  name: String
  photo: String
  position: ContactStatus
}

input ContactRequestInput {
  email: String
  id: ID
  msg: String
  name: String
  photo: String
}

"""Describing whether you are sender or reciever of a request"""
enum ContactRequestPosition {
  ACTIVE_LISTING
  APPOINTMENT_SET
  ATTEMPTED_CONTACT
  LISTING_AGREEMENT
  MET_WITH_CUSTOMER
  NEW
  REJECTED
  SALE_CLOSED
  SPOKE_WITH_CUSTOMER
}

"""Describing current status of communication with contact"""
enum ContactStatus {
  RECEIVER
  SENDER
}

input CreateListingInput {
  appliances: [String!]
  architecturalStyle: String
  basement: String
  basementSqFt: Float
  bedrooms: Float
  buildingAmenities: [String!]
  city: String
  coolingType: [String!]
  country: String
  countryFlag: String
  description: String
  exterior: [String!]
  floorCovering: [String!]
  fullBathrooms: Float
  garageSqFt: Float
  heatingFuel: [String!]
  heatingType: [String!]
  homeType: String
  indoorFeatures: [String!]
  oneFourBathrooms: Float
  oneTwoBathrooms: Float
  outdoorAmenities: [String!]
  owner: ID
  parking: [String!]
  photos: [IListingImageInput!]
  price: Float
  propertySize: Float
  propertySizeUnit: String
  relatedWebsite: String
  roof: [String!]
  rooms: [String!]
  state: String
  threeFourBathrooms: Float
  totalGarages: Float
  totalRooms: Float
  view: [String!]
  virtualTourURL: String
  yearBuilt: Float
}

input CreateUserInput {
  email: String!
  firstname: String!
  lastname: String!
  password: String!
  profileId: ID
  userType: UserType
}

type IListingImage {
  id: String!
  name: String!
  uri: String!
}

input IListingImageInput {
  id: String!
  name: String!
  uri: String!
}

type Listing {
  _id: ID!
  agent: ID
  appliances: [String!]
  architecturalStyle: String
  basement: String
  basementSqFt: Float
  bedrooms: Float
  buildingAmenities: [String!]
  city: String
  coolingType: [String!]
  country: String
  countryFlag: String
  createdAt: Timestamp!
  description: String
  exterior: [String!]
  floorCovering: [String!]
  fullBathrooms: Float
  garageSqFt: Float
  heatingFuel: [String!]
  heatingType: [String!]
  homeType: String
  indoorFeatures: [String!]
  oneFourBathrooms: Float
  oneTwoBathrooms: Float
  outdoorAmenities: [String!]
  owner: ID
  parking: [String!]
  photos: [IListingImage!]
  price: Float
  propertySize: Float
  propertySizeUnit: String
  relatedWebsite: String
  roof: [String!]
  rooms: [String!]
  state: String
  status: ListingStatus
  threeFourBathrooms: Float
  totalGarages: Float
  totalRooms: Float
  updatedAt: Timestamp!
  view: [String!]
  virtualTourURL: String
  yearBuilt: Float
}

"""Different units for determing the property size"""
enum ListingStatus {
  ACTIVE
  IN_TRANSACTION
  SOLD
  UNLISTED
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  _id: String!
  access_token: String!
  email: String!
  firstname: String!
  lastname: String!
  profileId: ID
  userType: UserType
}

type Message {
  content: String!
  senderId: ID!
}

type MessageRoom {
  _id: ID!
  members: [ID!]!
  messages: [Message!]!
}

type Mutation {
  acceptContactRequest(receiverId: String!, senderId: String!): Boolean!
  addNewComment(comment: CommentInput!): Boolean!
  createListing(listing: CreateListingInput!): Listing!
  createProfile(conversationListId: String!, userId: String!): Profile!
  createUser(user: CreateUserInput!): User!
  login(user: LoginInput!): LoginResponse!
  sendContactRequest(receiver: ContactRequestInput!, sender: ContactRequestInput!): Boolean!
  sendMessage(message: SendMessageInput!): Boolean!
  updateProfile(profile: UpdateProfileInput!): Boolean!
  updateUser(user: UpdateUserInput!): User!
}

type Profile {
  _id: ID!
  about: String
  blog: String
  brokerageAddress: String
  brokerageName: String
  brokeragePhone: String
  city: String
  contactRequests: [ContactRequest!]
  contacts: [Contact!]
  conversationListId: ID!
  country: String
  countryFlag: String
  facebook: String
  inBusinessSince: String
  linkedIn: String
  primaryPhone: String
  professionalTitle: String
  profileVideo: String
  reviews: [String!]
  state: String
  twitter: String
  userId: ID!
  website: String
}

type Query {
  getAgents: [User!]!
  getListing(id: String!): Listing!
  getListings: [Listing!]!
  getMe: User!
  getMessageRoom(id: String!): MessageRoom!
  getMyProfile: Profile!
  getUser(id: String!): User!
  getUserListings: [Listing!]!
  getUserProfile(id: String!): Profile!
  recipe(id: ID!): Recipe
  sendOTP(number: String!): String!
  verifyOTP(number: String!, otp: String!): String!
}

type Recipe {
  comments: [Comment!]!
  description: String
  id: ID!
  title: String!
}

input SendMessageInput {
  content: String!
  messageRoomId: String!
}

type Subscription {
  newComments(recipeId: ID!): Comment!
  newMessage(messageRoomId: String!): Message!
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input UpdateProfileInput {
  about: String
  blog: String
  brokerageAddress: String
  brokerageName: String
  brokeragePhone: String
  city: String
  country: String
  countryFlag: String
  facebook: String
  inBusinessSince: String
  linkedIn: String
  primaryPhone: String
  professionalTitle: String
  profileVideo: String
  reviews: [String!]
  state: String
  twitter: String
  website: String
}

input UpdateUserInput {
  firstname: String
  lastname: String
  userType: UserType
}

type User {
  _id: String!
  email: String!
  firstname: String!
  lastname: String!
  profileId: ID
  userType: UserType
}

"""Various user types"""
enum UserType {
  AGENT
  BUYER
  BUYER_OR_SELLER
  SELLER
}